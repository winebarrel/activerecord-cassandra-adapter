#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.6
# from Racc grammer file "".
#

require 'racc/parser.rb'


require 'strscan'

module ActiveCassandra

class SQLParser < Racc::Parser

module_eval(<<'...end sqlparser.y/module_eval...', 'sqlparser.y', 206)

KEYWORDS = %w(
  AND
  AS
  ASC
  BY
  COUNT
  DELETE
  DESC
  DISTINCT
  EXISTS
  FROM
  IN
  INSERT
  INTO
  LIMIT
  NOT
  OFFSET
  ORDER
  SELECT
  SET
  UPDATE
  VALUES
  WHERE
)

KEYWORD_REGEXP = Regexp.compile("(?:#{KEYWORDS.join '|'})\\b", Regexp::IGNORECASE)

def initialize(obj)
  src = obj.is_a?(IO) ? obj.read : obj.to_s
  @ss = StringScanner.new(src)
end

def scan
  piece = nil

  until @ss.eos?
    if (tok = @ss.scan /\s+/)
      # nothing to do
    elsif (tok = @ss.scan /(?:=)/)
      yield tok, tok
    elsif (tok = @ss.scan KEYWORD_REGEXP)
      yield tok.upcase.to_sym, tok
    elsif (tok = @ss.scan /NULL\b/i)
      yield :NULL, nil
    elsif (tok = @ss.scan /'(?:[^']|'')*'/) #'
      yield :STRING, tok.slice(1...-1).gsub(/''/, "'")
    elsif (tok = @ss.scan /-?(?:0|[1-9]\d*)(?:\.\d+)/)
      yield :NUMBER, tok.to_f
    elsif (tok = @ss.scan /-?(?:0|[1-9]\d*)/)
      yield :NUMBER, tok.to_i
    elsif (tok = @ss.scan /[,\(\)\*]/)
      yield tok, tok
    elsif (tok = @ss.scan /(?:[a-z_]\w+\.|[a-z]\.)*ID\b/i)
      yield :ID, tok
    elsif (tok = @ss.scan /(?:[a-z_]\w+\.|[a-z]\.)*(?:[a-z_]\w+|[a-z])/i)
      yield :IDENTIFIER, tok
    else
      raise Racc::ParseError, ('parse error on value "%s"' % @ss.rest.inspect)
    end
  end

  yield false, '$'
end
private :scan

def parse
  yyparse self, :scan
end

...end sqlparser.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
   103,   114,    91,    75,    76,   106,    77,     2,    36,    70,
    70,    10,     9,    68,    69,   116,   123,   125,    63,    78,
    63,    70,   113,    53,    53,    64,    65,    64,    65,     1,
    51,    50,     6,    10,    10,    53,   113,   113,   113,    67,
    50,   126,    75,    76,    53,    10,    19,    20,    40,    15,
    36,   122,   119,    10,    10,    88,    27,    36,    78,    26,
    27,    63,   113,    45,    10,    10,    63,    79,    64,    65,
    63,    10,    63,    64,    65,    63,    10,    64,    65,    64,
    65,    63,    64,    65,    63,    79,    63,    81,    64,    65,
    36,    64,    65,    64,    65,    83,    81,    85,    10,    87,
    10,    46,    89,    10,    24,    93,    10,    96,    97,    10,
    96,    22,    29,    39,    10,    60,   107,   109,    10,   107,
    10,    14,    36,    13,    34,   118,    10,    12,    30,    10,
   100 ]

racc_action_check = [
    90,   102,    74,    54,    54,    93,    54,     0,    43,    79,
    70,    45,     0,    50,    50,   105,   112,   115,    90,    54,
    74,    51,   102,    79,    70,    90,    90,    74,    74,     0,
    36,    51,     0,    79,    70,    51,   105,   112,   115,    47,
    36,   117,    73,    73,    36,    51,     9,     9,    29,     9,
    31,   110,   110,    39,    36,    71,    18,    37,    73,    16,
    47,    87,   117,    31,    29,     9,   100,    71,    87,    87,
    91,    53,   103,   100,   100,   106,    19,    91,    91,   103,
   103,   113,   106,   106,    68,    55,    46,    58,   113,   113,
    59,    68,    68,    46,    46,    60,    61,    67,    34,    69,
    14,    33,    72,    30,    13,    77,    12,    80,    81,    83,
    84,    11,    20,    28,    27,    41,    95,    96,    97,    99,
    26,     6,    25,     3,    23,   107,    22,     2,    21,     1,
    85 ]

racc_action_pointer = [
     5,   101,   124,   123,   nil,   nil,   113,   nil,   nil,    37,
   nil,    86,    78,   104,    72,   nil,    51,   nil,    30,    48,
   108,   120,    98,   120,   nil,   109,    92,    86,   105,    36,
    75,    37,   nil,    86,    70,   nil,    26,    44,   nil,    25,
   nil,   110,   nil,    -5,   nil,   -17,    64,    34,   nil,   nil,
    -2,    17,   nil,    43,   -12,    68,   nil,   nil,    68,    77,
    84,    77,   nil,   nil,   nil,   nil,   nil,    91,    62,    95,
     6,    50,    97,    27,    -2,   nil,   nil,    89,   nil,     5,
    86,    88,   nil,    81,    89,   126,   nil,    39,   nil,   nil,
    -4,    48,   nil,     1,   nil,    93,    95,    90,   nil,    96,
    44,   nil,    -4,    50,   nil,    10,    53,   103,   nil,   nil,
    19,   nil,    11,    59,   nil,    12,   nil,    36,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil ]

racc_action_default = [
   -58,   -58,   -58,   -58,    -1,    -2,   -58,    -3,    -4,   -58,
   -45,   -58,   -58,   -58,   -58,   -13,   -58,   -46,   -14,   -58,
   -58,   -58,   -58,   -58,   127,   -15,   -58,   -58,   -58,   -58,
   -58,   -15,   -41,   -58,   -58,   -44,   -58,   -15,   -47,   -58,
   -11,   -58,   -12,   -15,   -40,   -58,   -58,   -58,   -24,   -30,
   -58,   -58,   -16,   -58,   -58,   -17,   -18,   -22,   -32,   -15,
    -9,   -32,   -42,   -49,   -48,   -50,   -43,   -58,   -58,   -58,
   -58,   -58,   -58,   -58,   -58,   -55,   -53,   -58,   -54,   -58,
   -36,   -58,    -7,   -58,   -36,   -58,   -20,   -58,   -25,   -19,
   -58,   -58,   -26,   -58,   -23,   -38,   -58,   -58,   -10,   -38,
   -58,   -51,   -58,   -58,   -27,   -58,   -58,   -58,    -8,   -37,
   -34,    -6,   -58,   -58,   -21,   -58,   -28,   -58,   -39,   -57,
   -33,   -35,   -56,    -5,   -52,   -29,   -31 ]

racc_goto_table = [
    11,   102,    66,    74,    32,   105,    95,    18,    17,     7,
    99,    23,   108,    25,   112,     8,   111,   115,    28,    56,
   117,    33,    90,    16,    86,    37,    38,    62,    42,    43,
    92,    35,    47,    17,    72,    41,    80,    44,    59,    84,
    52,    55,    21,    58,    33,     5,   104,    94,     4,    61,
   120,   121,    73,    31,     3,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    82,   nil,   nil,   nil,   124,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    98,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   110 ]

racc_goto_check = [
     6,     8,    19,    22,    27,     8,    12,     7,     6,     4,
    12,     6,    13,     6,     8,     5,    13,     8,     6,    18,
     8,     6,    22,    14,    19,     6,     6,    27,     6,     6,
    19,    10,     7,     6,    18,    15,    11,    10,     6,    11,
    16,    17,     9,    10,     6,     3,    19,    20,     2,    10,
    24,    25,     6,    26,     1,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    10,   nil,   nil,   nil,    19,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,     6,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,     6 ]

racc_goto_pointer = [
   nil,    54,    48,    45,     9,    15,    -1,    -2,   -86,    33,
     6,   -22,   -74,   -83,    14,     6,     4,     5,   -17,   -44,
   -32,   nil,   -51,   nil,   -60,   -59,    31,   -18 ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil,   nil,    54,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    71,   nil,   101,
    57,    48,   nil,    49,   nil,   nil,   nil,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 35, :_reduce_none,
  1, 35, :_reduce_none,
  1, 35, :_reduce_none,
  1, 35, :_reduce_none,
  10, 36, :_reduce_5,
  8, 37, :_reduce_6,
  6, 37, :_reduce_7,
  8, 37, :_reduce_8,
  4, 48, :_reduce_9,
  6, 48, :_reduce_10,
  1, 49, :_reduce_none,
  1, 49, :_reduce_none,
  1, 43, :_reduce_13,
  1, 43, :_reduce_none,
  0, 44, :_reduce_15,
  2, 44, :_reduce_16,
  2, 44, :_reduce_17,
  1, 50, :_reduce_none,
  3, 50, :_reduce_19,
  3, 52, :_reduce_20,
  5, 52, :_reduce_21,
  1, 51, :_reduce_22,
  3, 51, :_reduce_23,
  1, 54, :_reduce_none,
  3, 54, :_reduce_25,
  3, 55, :_reduce_26,
  4, 55, :_reduce_27,
  5, 55, :_reduce_28,
  6, 55, :_reduce_29,
  1, 55, :_reduce_none,
  6, 57, :_reduce_31,
  0, 45, :_reduce_32,
  4, 45, :_reduce_33,
  0, 58, :_reduce_34,
  1, 58, :_reduce_none,
  0, 46, :_reduce_36,
  2, 46, :_reduce_37,
  0, 47, :_reduce_38,
  2, 47, :_reduce_39,
  5, 38, :_reduce_40,
  1, 60, :_reduce_none,
  3, 60, :_reduce_42,
  3, 61, :_reduce_43,
  4, 39, :_reduce_44,
  1, 40, :_reduce_none,
  1, 41, :_reduce_46,
  3, 41, :_reduce_47,
  1, 53, :_reduce_none,
  1, 53, :_reduce_none,
  1, 53, :_reduce_none,
  1, 42, :_reduce_51,
  3, 42, :_reduce_52,
  1, 56, :_reduce_53,
  1, 56, :_reduce_54,
  1, 56, :_reduce_55,
  1, 59, :_reduce_56,
  1, 59, :_reduce_57 ]

racc_reduce_n = 58

racc_shift_n = 127

racc_token_table = {
  false => 0,
  :error => 1,
  :INSERT => 2,
  :INTO => 3,
  "(" => 4,
  ")" => 5,
  :VALUES => 6,
  :SELECT => 7,
  :FROM => 8,
  :DISTINCT => 9,
  :COUNT => 10,
  :AS => 11,
  "*" => 12,
  :WHERE => 13,
  :ID => 14,
  "=" => 15,
  :IN => 16,
  :AND => 17,
  :NOT => 18,
  :ORDER => 19,
  :BY => 20,
  :LIMIT => 21,
  :NUMBER => 22,
  :OFFSET => 23,
  :UPDATE => 24,
  :SET => 25,
  "," => 26,
  :DELETE => 27,
  :IDENTIFIER => 28,
  :STRING => 29,
  :NULL => 30,
  :EXISTS => 31,
  :ASC => 32,
  :DESC => 33 }

racc_nt_base = 34

racc_use_result_var = false

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "INSERT",
  "INTO",
  "\"(\"",
  "\")\"",
  "VALUES",
  "SELECT",
  "FROM",
  "DISTINCT",
  "COUNT",
  "AS",
  "\"*\"",
  "WHERE",
  "ID",
  "\"=\"",
  "IN",
  "AND",
  "NOT",
  "ORDER",
  "BY",
  "LIMIT",
  "NUMBER",
  "OFFSET",
  "UPDATE",
  "SET",
  "\",\"",
  "DELETE",
  "IDENTIFIER",
  "STRING",
  "NULL",
  "EXISTS",
  "ASC",
  "DESC",
  "$start",
  "sql",
  "create_statement",
  "read_statemant",
  "update_statemant",
  "delete_statemant",
  "id",
  "id_list",
  "value_list",
  "select_list",
  "where_clause",
  "order_by_clause",
  "limit_clause",
  "offset_clause",
  "count_clause",
  "count_arg",
  "id_search_condition",
  "search_condition",
  "id_predicate",
  "value",
  "boolean_primary",
  "predicate",
  "op",
  "not_in_predicate",
  "ordering_spec",
  "order_spec",
  "set_clause_list",
  "set_clause" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

# reduce 2 omitted

# reduce 3 omitted

# reduce 4 omitted

module_eval(<<'.,.,', 'sqlparser.y', 10)
  def _reduce_5(val, _values)
                                {:command => :insert, :table => val[2], :column_list => val[4], :value_list => val[8]}
                          
  end
.,.,

module_eval(<<'.,.,', 'sqlparser.y', 15)
  def _reduce_6(val, _values)
                                {:command => :select, :table => val[3], :select_list => val[1], :condition => val[4], :order => val[5], :limit => val[6], :offset => val[7]}
                          
  end
.,.,

module_eval(<<'.,.,', 'sqlparser.y', 19)
  def _reduce_7(val, _values)
                                {:command => :select, :table => val[4], :select_list => val[2], :distinct => val[2], :condition => val[5]}
                          
  end
.,.,

module_eval(<<'.,.,', 'sqlparser.y', 23)
  def _reduce_8(val, _values)
                                {:command => :select, :table => val[3], :count => val[1], :condition => val[4], :order => val[5], :limit => val[6], :offset => val[7]}
                          
  end
.,.,

module_eval(<<'.,.,', 'sqlparser.y', 28)
  def _reduce_9(val, _values)
                                "count_all"
                          
  end
.,.,

module_eval(<<'.,.,', 'sqlparser.y', 32)
  def _reduce_10(val, _values)
                                val[5]
                          
  end
.,.,

# reduce 11 omitted

# reduce 12 omitted

module_eval(<<'.,.,', 'sqlparser.y', 40)
  def _reduce_13(val, _values)
                                []
                          
  end
.,.,

# reduce 14 omitted

module_eval(<<'.,.,', 'sqlparser.y', 46)
  def _reduce_15(val, _values)
                                []
                          
  end
.,.,

module_eval(<<'.,.,', 'sqlparser.y', 50)
  def _reduce_16(val, _values)
                                val[1]
                          
  end
.,.,

module_eval(<<'.,.,', 'sqlparser.y', 54)
  def _reduce_17(val, _values)
                                val[1]
                          
  end
.,.,

# reduce 18 omitted

module_eval(<<'.,.,', 'sqlparser.y', 60)
  def _reduce_19(val, _values)
                                val[1]
                          
  end
.,.,

module_eval(<<'.,.,', 'sqlparser.y', 65)
  def _reduce_20(val, _values)
                                val[2]
                          
  end
.,.,

module_eval(<<'.,.,', 'sqlparser.y', 69)
  def _reduce_21(val, _values)
                                val[3]
                          
  end
.,.,

module_eval(<<'.,.,', 'sqlparser.y', 74)
  def _reduce_22(val, _values)
                                [val[0]].flatten
                          
  end
.,.,

module_eval(<<'.,.,', 'sqlparser.y', 78)
  def _reduce_23(val, _values)
                                (val[0] << val[2]).flatten
                          
  end
.,.,

# reduce 24 omitted

module_eval(<<'.,.,', 'sqlparser.y', 84)
  def _reduce_25(val, _values)
                                val[1]
                          
  end
.,.,

module_eval(<<'.,.,', 'sqlparser.y', 89)
  def _reduce_26(val, _values)
                                {:name => val[0], :op => val[1], :expr => val[2]}
                          
  end
.,.,

module_eval(<<'.,.,', 'sqlparser.y', 93)
  def _reduce_27(val, _values)
                                {:name => val[1], :op => val[2], :expr => val[3], :not => true}
                          
  end
.,.,

module_eval(<<'.,.,', 'sqlparser.y', 97)
  def _reduce_28(val, _values)
                                {:name => val[0], :op => val[1], :expr => val[3]}
                          
  end
.,.,

module_eval(<<'.,.,', 'sqlparser.y', 101)
  def _reduce_29(val, _values)
                                {:name => val[1], :op => val[2], :expr => val[4], :not => true}
                          
  end
.,.,

# reduce 30 omitted

module_eval(<<'.,.,', 'sqlparser.y', 108)
  def _reduce_31(val, _values)
                                {:name => val[0], :op => '$nin', :expr => val[4]}
                          
  end
.,.,

module_eval(<<'.,.,', 'sqlparser.y', 113)
  def _reduce_32(val, _values)
                                nil
                          
  end
.,.,

module_eval(<<'.,.,', 'sqlparser.y', 117)
  def _reduce_33(val, _values)
                                {:name => val[2], :type => val[3]}
                          
  end
.,.,

module_eval(<<'.,.,', 'sqlparser.y', 122)
  def _reduce_34(val, _values)
                                :asc
                          
  end
.,.,

# reduce 35 omitted

module_eval(<<'.,.,', 'sqlparser.y', 128)
  def _reduce_36(val, _values)
                                nil
                          
  end
.,.,

module_eval(<<'.,.,', 'sqlparser.y', 132)
  def _reduce_37(val, _values)
                                val[1]
                          
  end
.,.,

module_eval(<<'.,.,', 'sqlparser.y', 137)
  def _reduce_38(val, _values)
                                nil
                          
  end
.,.,

module_eval(<<'.,.,', 'sqlparser.y', 141)
  def _reduce_39(val, _values)
                                val[1]
                          
  end
.,.,

module_eval(<<'.,.,', 'sqlparser.y', 146)
  def _reduce_40(val, _values)
                                {:command => :update, :table => val[1], :set_clause_list => val[3], :condition => val[4]}
                          
  end
.,.,

# reduce 41 omitted

module_eval(<<'.,.,', 'sqlparser.y', 152)
  def _reduce_42(val, _values)
                                val[0].merge val[2]
                          
  end
.,.,

module_eval(<<'.,.,', 'sqlparser.y', 157)
  def _reduce_43(val, _values)
                              {val[0] => val[2]}
                        
  end
.,.,

module_eval(<<'.,.,', 'sqlparser.y', 162)
  def _reduce_44(val, _values)
                                {:command => :delete, :table => val[2], :condition => val[3]}
                          
  end
.,.,

# reduce 45 omitted

module_eval(<<'.,.,', 'sqlparser.y', 169)
  def _reduce_46(val, _values)
                                [val[0]]
                          
  end
.,.,

module_eval(<<'.,.,', 'sqlparser.y', 173)
  def _reduce_47(val, _values)
                                val[0] << val[2]
                          
  end
.,.,

# reduce 48 omitted

# reduce 49 omitted

# reduce 50 omitted

module_eval(<<'.,.,', 'sqlparser.y', 182)
  def _reduce_51(val, _values)
                                [val[0]]
                          
  end
.,.,

module_eval(<<'.,.,', 'sqlparser.y', 186)
  def _reduce_52(val, _values)
                                val[0] << val[2]
                          
  end
.,.,

module_eval(<<'.,.,', 'sqlparser.y', 189)
  def _reduce_53(val, _values)
     '$in'     
  end
.,.,

module_eval(<<'.,.,', 'sqlparser.y', 190)
  def _reduce_54(val, _values)
     '$exists' 
  end
.,.,

module_eval(<<'.,.,', 'sqlparser.y', 191)
  def _reduce_55(val, _values)
     '$eq'     
  end
.,.,

module_eval(<<'.,.,', 'sqlparser.y', 193)
  def _reduce_56(val, _values)
     :asc  
  end
.,.,

module_eval(<<'.,.,', 'sqlparser.y', 194)
  def _reduce_57(val, _values)
     :desc 
  end
.,.,

def _reduce_none(val, _values)
  val[0]
end

end   # class SQLParser


end # module ActiveCassandra
