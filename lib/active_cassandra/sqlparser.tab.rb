#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.6
# from Racc grammer file "".
#

require 'racc/parser.rb'


require 'strscan'

module ActiveCassandra

class SQLParser < Racc::Parser

module_eval(<<'...end sqlparser.y/module_eval...', 'sqlparser.y', 229)

KEYWORDS = %w(
  AND
  AS
  ASC
  BETWEEN
  BY
  COUNT
  DELETE
  DESC
  DISTINCT
  FROM
  IN
  INSERT
  INTO
  LIMIT
  NOT
  OFFSET
  ORDER
  REGEXP
  SELECT
  SET
  UPDATE
  VALUES
  WHERE
)

KEYWORD_REGEXP = Regexp.compile("(?:#{KEYWORDS.join '|'})\\b", Regexp::IGNORECASE)

def initialize(obj)
  src = obj.is_a?(IO) ? obj.read : obj.to_s
  @ss = StringScanner.new(src)
end

def scan
  piece = nil

  until @ss.eos?
    if (tok = @ss.scan /\s+/)
      # nothing to do
    elsif (tok = @ss.scan /(?:<>|!=|>=|<=|>|<|=)/)
      yield tok, tok
    elsif (tok = @ss.scan KEYWORD_REGEXP)
      yield tok.upcase.to_sym, tok
    elsif (tok = @ss.scan /NULL\b/i)
      yield :NULL, nil
    elsif (tok = @ss.scan /'(?:[^']|'')*'/) #'
      yield :STRING, tok.slice(1...-1).gsub(/''/, "'")
    elsif (tok = @ss.scan /-?(?:0|[1-9]\d*)(?:\.\d+)/)
      yield :NUMBER, tok.to_f
    elsif (tok = @ss.scan /-?(?:0|[1-9]\d*)/)
      yield :NUMBER, tok.to_i
    elsif (tok = @ss.scan /(?:[a-z_]\w+\.|[a-z]\.)*ID\b/i)
      yield :ID, tok
    elsif (tok = @ss.scan /(?:[a-z_]\w+\.|[a-z]\.)*(?:[a-z_]\w+|[a-z])/i)
      yield :IDENTIFIER, tok
    elsif (tok = @ss.scan /[,\(\)\*\.]/)
      yield tok, tok
    else
      raise Racc::ParseError, ('parse error on value "%s"' % @ss.rest.inspect)
    end
  end

  yield false, '$'
end
private :scan

def parse
  yyparse self, :scan
end

...end sqlparser.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
     3,   104,   116,   124,    12,     7,    12,   108,    73,   135,
    73,   137,    91,   139,   140,    91,    66,    91,    44,   142,
    94,    68,    69,    68,    69,     6,    58,    63,     8,    71,
    63,    71,    63,   136,    59,   136,    76,   136,   136,    12,
    26,    41,    12,   136,    12,    58,    54,    82,    85,    63,
    86,    87,   127,   128,    82,    85,    18,    19,    12,    13,
    12,    12,    89,    90,    77,    78,    79,    80,    81,    83,
    84,    77,    78,    79,    80,    81,    83,    84,    12,    44,
    68,    69,    68,    69,    68,    69,   131,   132,    71,    26,
    71,    94,    71,    12,    48,    68,    69,    68,    69,    68,
    69,    68,    69,    71,    96,    71,    97,    71,    99,    71,
    68,    69,    68,    69,    68,    69,   113,   114,    71,    97,
    71,    12,    71,   102,    44,    25,    44,   107,    24,    50,
   109,    23,    12,   112,    12,   116,    12,    27,   119,   120,
    44,    40,    21,    12,    12,    37,    12,    12,    20,    32,
    31,    12,    10,    12,    29 ]

racc_action_check = [
     0,    88,   100,   111,    48,     0,    18,    92,    51,   122,
    52,   123,    94,   126,   133,    59,    47,    91,    53,   138,
    92,    88,    88,   111,   111,     0,    59,    94,     0,    88,
    59,   111,    91,   122,    44,   123,    54,   126,   133,    94,
    47,    29,    59,   138,    91,    44,    42,    57,    57,    44,
    57,    57,   116,   116,    95,    95,     7,     7,    40,     7,
    29,    44,    58,    58,    57,    57,    57,    57,    57,    57,
    57,    95,    95,    95,    95,    95,    95,    95,     7,    33,
   119,   119,   120,   120,   112,   112,   117,   117,   119,    16,
   120,    60,   112,    63,    33,   107,   107,    89,    89,   104,
   104,   124,   124,   107,    66,    89,    72,   104,    73,   124,
   136,   136,    87,    87,    50,    50,    97,    97,   136,    74,
    87,    76,    50,    86,    39,    15,    36,    90,    14,    34,
    93,    11,    32,    96,    10,    98,    99,    17,   102,   103,
    30,    28,     9,    27,    26,    25,    24,    23,     8,    22,
    21,     6,     3,    20,    19 ]

racc_action_pointer = [
    -2,   nil,   nil,   149,   nil,   nil,   120,    47,   140,   142,
   103,   103,   nil,   nil,   120,   112,    60,   129,   -25,   150,
   122,   150,   145,   116,   115,   133,   113,   112,   133,    29,
   126,   nil,   101,    65,   113,   nil,   112,   nil,   nil,   110,
    27,   nil,    41,   nil,    30,   nil,   nil,    11,   -27,   nil,
    90,   -13,   -11,     4,    25,   nil,   nil,    31,    46,    11,
    73,   nil,   nil,    62,   nil,   nil,    98,   nil,   nil,   nil,
   nil,   nil,    83,    86,    96,   nil,    90,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   106,    88,    -3,    73,
   123,    13,     2,   125,     8,    38,   129,    92,   109,   105,
   -24,   nil,   134,   121,    75,   nil,   nil,    71,   nil,   nil,
   nil,    -1,    60,   nil,   nil,   nil,    28,    46,   nil,    56,
    58,   nil,     4,     6,    77,   nil,     8,   nil,   nil,   nil,
   nil,   nil,   nil,     9,   nil,   nil,    86,   nil,    14,   nil,
   nil,   nil,   nil ]

racc_action_default = [
   -69,    -1,    -2,   -69,    -3,    -4,   -69,   -69,   -69,   -69,
   -69,   -69,   -50,   -13,   -69,   -51,   -15,   -69,   -69,   -69,
   -69,   -69,   -69,   -69,   -69,   -69,   -69,   -69,   -69,   -69,
   -16,   143,   -69,   -16,   -69,   -46,   -16,   -14,   -52,   -16,
   -69,   -11,   -69,   -12,   -69,   -49,   -51,   -69,   -69,   -45,
   -69,   -35,   -35,   -16,    -9,   -32,   -17,   -69,   -69,   -69,
   -18,   -19,   -23,   -69,   -25,   -31,   -69,   -47,   -54,   -53,
   -48,   -55,   -39,   -69,   -39,    -7,   -69,   -59,   -60,   -61,
   -62,   -63,   -66,   -64,   -65,   -58,   -69,   -69,   -69,   -69,
   -69,   -69,   -69,   -69,   -69,   -69,   -69,   -69,   -42,   -69,
   -42,   -10,   -69,   -69,   -69,   -27,   -21,   -69,   -26,   -20,
   -24,   -69,   -69,   -40,   -41,    -8,   -69,   -37,    -6,   -69,
   -69,   -56,   -69,   -69,   -69,   -28,   -69,   -43,   -44,   -36,
   -38,   -67,   -68,   -69,   -33,   -29,   -69,   -22,   -69,    -5,
   -34,   -57,   -30 ]

racc_goto_table = [
    11,    15,    70,    16,    22,    88,    35,    45,     4,    61,
    49,     5,    28,    51,    30,    14,    52,    34,    36,    42,
    38,    39,    56,    43,    93,    98,    46,   100,    47,   122,
    75,    67,   123,   115,    53,   118,    60,   126,    17,   103,
   105,   106,    34,   111,   133,    72,    74,     2,   110,   138,
     1,   129,   130,    33,     9,   nil,   nil,    95,   nil,   nil,
   nil,   nil,   nil,   125,   nil,   nil,   nil,   nil,   nil,   nil,
   101,   nil,   134,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   141,   nil,
   nil,   nil,   nil,   117 ]

racc_goto_check = [
     6,     6,    19,     7,     6,    22,    28,    10,     4,    18,
    10,     5,     6,    10,     6,    14,    10,     6,     6,    15,
     6,     6,    16,     6,    18,    12,     6,    12,     7,     8,
    10,    28,     8,    13,     6,    13,    17,     8,     9,    19,
    19,    19,     6,    22,     8,    11,    11,     3,    20,     8,
     2,    25,    26,    27,     1,   nil,   nil,     6,   nil,   nil,
   nil,   nil,   nil,    19,   nil,   nil,   nil,   nil,   nil,   nil,
     6,   nil,    19,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    19,   nil,
   nil,   nil,   nil,     6 ]

racc_goto_pointer = [
   nil,    54,    50,    47,     8,    11,    -6,    -4,   -75,    31,
   -23,    -6,   -47,   -65,     8,   -10,   -22,    -8,   -35,   -48,
   -46,   nil,   -52,   nil,   nil,   -66,   -65,    30,   -17 ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil,   nil,    57,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    92,   nil,   121,
    62,    64,   nil,    65,    55,   nil,   nil,   nil,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 43, :_reduce_none,
  1, 43, :_reduce_none,
  1, 43, :_reduce_none,
  1, 43, :_reduce_none,
  10, 44, :_reduce_5,
  8, 45, :_reduce_6,
  6, 45, :_reduce_7,
  8, 45, :_reduce_8,
  4, 56, :_reduce_9,
  6, 56, :_reduce_10,
  1, 57, :_reduce_none,
  1, 57, :_reduce_none,
  1, 51, :_reduce_13,
  3, 51, :_reduce_14,
  1, 51, :_reduce_none,
  0, 52, :_reduce_16,
  2, 52, :_reduce_17,
  2, 52, :_reduce_18,
  1, 58, :_reduce_none,
  3, 58, :_reduce_20,
  3, 60, :_reduce_21,
  5, 60, :_reduce_22,
  1, 59, :_reduce_23,
  3, 59, :_reduce_24,
  1, 62, :_reduce_none,
  3, 62, :_reduce_26,
  3, 63, :_reduce_27,
  4, 63, :_reduce_28,
  5, 63, :_reduce_29,
  6, 63, :_reduce_30,
  1, 63, :_reduce_none,
  1, 63, :_reduce_none,
  5, 65, :_reduce_33,
  6, 66, :_reduce_34,
  0, 53, :_reduce_35,
  4, 53, :_reduce_36,
  0, 67, :_reduce_37,
  1, 67, :_reduce_none,
  0, 54, :_reduce_39,
  2, 54, :_reduce_40,
  2, 54, :_reduce_41,
  0, 55, :_reduce_42,
  2, 55, :_reduce_43,
  2, 55, :_reduce_44,
  5, 46, :_reduce_45,
  1, 69, :_reduce_none,
  3, 69, :_reduce_47,
  3, 70, :_reduce_48,
  4, 47, :_reduce_49,
  1, 48, :_reduce_none,
  1, 49, :_reduce_51,
  3, 49, :_reduce_52,
  1, 61, :_reduce_none,
  1, 61, :_reduce_none,
  1, 61, :_reduce_none,
  1, 50, :_reduce_56,
  3, 50, :_reduce_57,
  1, 64, :_reduce_58,
  1, 64, :_reduce_59,
  1, 64, :_reduce_60,
  1, 64, :_reduce_61,
  1, 64, :_reduce_62,
  1, 64, :_reduce_63,
  1, 64, :_reduce_64,
  1, 64, :_reduce_65,
  1, 64, :_reduce_66,
  1, 68, :_reduce_67,
  1, 68, :_reduce_68 ]

racc_reduce_n = 69

racc_shift_n = 143

racc_token_table = {
  false => 0,
  :error => 1,
  :INSERT => 2,
  :INTO => 3,
  "(" => 4,
  ")" => 5,
  :VALUES => 6,
  :SELECT => 7,
  :FROM => 8,
  :DISTINCT => 9,
  :COUNT => 10,
  :AS => 11,
  "*" => 12,
  "." => 13,
  :WHERE => 14,
  :ID => 15,
  "=" => 16,
  :IN => 17,
  :AND => 18,
  :NOT => 19,
  :BETWEEN => 20,
  :ORDER => 21,
  :BY => 22,
  :LIMIT => 23,
  :NUMBER => 24,
  :STRING => 25,
  :OFFSET => 26,
  :UPDATE => 27,
  :SET => 28,
  "," => 29,
  :DELETE => 30,
  :IDENTIFIER => 31,
  :NULL => 32,
  :REGEXP => 33,
  "<>" => 34,
  "!=" => 35,
  ">=" => 36,
  "<=" => 37,
  ">" => 38,
  "<" => 39,
  :ASC => 40,
  :DESC => 41 }

racc_nt_base = 42

racc_use_result_var = false

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "INSERT",
  "INTO",
  "\"(\"",
  "\")\"",
  "VALUES",
  "SELECT",
  "FROM",
  "DISTINCT",
  "COUNT",
  "AS",
  "\"*\"",
  "\".\"",
  "WHERE",
  "ID",
  "\"=\"",
  "IN",
  "AND",
  "NOT",
  "BETWEEN",
  "ORDER",
  "BY",
  "LIMIT",
  "NUMBER",
  "STRING",
  "OFFSET",
  "UPDATE",
  "SET",
  "\",\"",
  "DELETE",
  "IDENTIFIER",
  "NULL",
  "REGEXP",
  "\"<>\"",
  "\"!=\"",
  "\">=\"",
  "\"<=\"",
  "\">\"",
  "\"<\"",
  "ASC",
  "DESC",
  "$start",
  "sql",
  "create_statement",
  "read_statemant",
  "update_statemant",
  "delete_statemant",
  "id",
  "id_list",
  "value_list",
  "select_list",
  "where_clause",
  "order_by_clause",
  "limit_clause",
  "offset_clause",
  "count_clause",
  "count_arg",
  "id_search_condition",
  "search_condition",
  "id_predicate",
  "value",
  "boolean_primary",
  "predicate",
  "op",
  "between_predicate",
  "not_in_predicate",
  "ordering_spec",
  "order_spec",
  "set_clause_list",
  "set_clause" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

# reduce 2 omitted

# reduce 3 omitted

# reduce 4 omitted

module_eval(<<'.,.,', 'sqlparser.y', 10)
  def _reduce_5(val, _values)
                                {:command => :insert, :table => val[2], :column_list => val[4], :value_list => val[8]}
                          
  end
.,.,

module_eval(<<'.,.,', 'sqlparser.y', 15)
  def _reduce_6(val, _values)
                                {:command => :select, :table => val[3], :select_list => val[1], :condition => val[4], :order => val[5], :limit => val[6], :offset => val[7]}
                          
  end
.,.,

module_eval(<<'.,.,', 'sqlparser.y', 19)
  def _reduce_7(val, _values)
                                {:command => :select, :table => val[4], :select_list => val[2], :distinct => val[2], :condition => val[5]}
                          
  end
.,.,

module_eval(<<'.,.,', 'sqlparser.y', 23)
  def _reduce_8(val, _values)
                                {:command => :select, :table => val[3], :count => val[1], :condition => val[4], :order => val[5], :limit => val[6], :offset => val[7]}
                          
  end
.,.,

module_eval(<<'.,.,', 'sqlparser.y', 28)
  def _reduce_9(val, _values)
                                "count_all"
                          
  end
.,.,

module_eval(<<'.,.,', 'sqlparser.y', 32)
  def _reduce_10(val, _values)
                                val[5]
                          
  end
.,.,

# reduce 11 omitted

# reduce 12 omitted

module_eval(<<'.,.,', 'sqlparser.y', 40)
  def _reduce_13(val, _values)
                                []
                          
  end
.,.,

module_eval(<<'.,.,', 'sqlparser.y', 44)
  def _reduce_14(val, _values)
                                []
                          
  end
.,.,

# reduce 15 omitted

module_eval(<<'.,.,', 'sqlparser.y', 50)
  def _reduce_16(val, _values)
                                []
                          
  end
.,.,

module_eval(<<'.,.,', 'sqlparser.y', 54)
  def _reduce_17(val, _values)
                                val[1]
                          
  end
.,.,

module_eval(<<'.,.,', 'sqlparser.y', 58)
  def _reduce_18(val, _values)
                                val[1]
                          
  end
.,.,

# reduce 19 omitted

module_eval(<<'.,.,', 'sqlparser.y', 64)
  def _reduce_20(val, _values)
                                val[1]
                          
  end
.,.,

module_eval(<<'.,.,', 'sqlparser.y', 69)
  def _reduce_21(val, _values)
                                val[2]
                          
  end
.,.,

module_eval(<<'.,.,', 'sqlparser.y', 73)
  def _reduce_22(val, _values)
                                val[3]
                          
  end
.,.,

module_eval(<<'.,.,', 'sqlparser.y', 78)
  def _reduce_23(val, _values)
                                [val[0]].flatten
                          
  end
.,.,

module_eval(<<'.,.,', 'sqlparser.y', 82)
  def _reduce_24(val, _values)
                                (val[0] << val[2]).flatten
                          
  end
.,.,

# reduce 25 omitted

module_eval(<<'.,.,', 'sqlparser.y', 88)
  def _reduce_26(val, _values)
                                val[1]
                          
  end
.,.,

module_eval(<<'.,.,', 'sqlparser.y', 93)
  def _reduce_27(val, _values)
                                {:name => val[0], :op => val[1], :expr => val[2]}
                          
  end
.,.,

module_eval(<<'.,.,', 'sqlparser.y', 97)
  def _reduce_28(val, _values)
                                {:name => val[1], :op => val[2], :expr => val[3], :not => true}
                          
  end
.,.,

module_eval(<<'.,.,', 'sqlparser.y', 101)
  def _reduce_29(val, _values)
                                {:name => val[0], :op => val[1], :expr => val[3]}
                          
  end
.,.,

module_eval(<<'.,.,', 'sqlparser.y', 105)
  def _reduce_30(val, _values)
                                {:name => val[1], :op => val[2], :expr => val[4], :not => true}
                          
  end
.,.,

# reduce 31 omitted

# reduce 32 omitted

module_eval(<<'.,.,', 'sqlparser.y', 112)
  def _reduce_33(val, _values)
                                {:name => val[0], :op => '$bt', :expr => [val[2], val[4]]}
                          
  end
.,.,

module_eval(<<'.,.,', 'sqlparser.y', 117)
  def _reduce_34(val, _values)
                                {:name => val[0], :op => '$in', :expr => val[4], :not => true}
                          
  end
.,.,

module_eval(<<'.,.,', 'sqlparser.y', 122)
  def _reduce_35(val, _values)
                                nil
                          
  end
.,.,

module_eval(<<'.,.,', 'sqlparser.y', 126)
  def _reduce_36(val, _values)
                                {:name => val[2], :type => val[3]}
                          
  end
.,.,

module_eval(<<'.,.,', 'sqlparser.y', 131)
  def _reduce_37(val, _values)
                                :asc
                          
  end
.,.,

# reduce 38 omitted

module_eval(<<'.,.,', 'sqlparser.y', 137)
  def _reduce_39(val, _values)
                                nil
                          
  end
.,.,

module_eval(<<'.,.,', 'sqlparser.y', 141)
  def _reduce_40(val, _values)
                                val[1].to_i
                          
  end
.,.,

module_eval(<<'.,.,', 'sqlparser.y', 145)
  def _reduce_41(val, _values)
                                val[1]
                          
  end
.,.,

module_eval(<<'.,.,', 'sqlparser.y', 150)
  def _reduce_42(val, _values)
                                nil
                          
  end
.,.,

module_eval(<<'.,.,', 'sqlparser.y', 154)
  def _reduce_43(val, _values)
                                val[1].to_i
                          
  end
.,.,

module_eval(<<'.,.,', 'sqlparser.y', 158)
  def _reduce_44(val, _values)
                                val[1]
                          
  end
.,.,

module_eval(<<'.,.,', 'sqlparser.y', 163)
  def _reduce_45(val, _values)
                                {:command => :update, :table => val[1], :set_clause_list => val[3], :condition => val[4]}
                          
  end
.,.,

# reduce 46 omitted

module_eval(<<'.,.,', 'sqlparser.y', 169)
  def _reduce_47(val, _values)
                                val[0].merge val[2]
                          
  end
.,.,

module_eval(<<'.,.,', 'sqlparser.y', 174)
  def _reduce_48(val, _values)
                              {val[0] => val[2]}
                        
  end
.,.,

module_eval(<<'.,.,', 'sqlparser.y', 179)
  def _reduce_49(val, _values)
                                {:command => :delete, :table => val[2], :condition => val[3]}
                          
  end
.,.,

# reduce 50 omitted

module_eval(<<'.,.,', 'sqlparser.y', 186)
  def _reduce_51(val, _values)
                                [val[0]]
                          
  end
.,.,

module_eval(<<'.,.,', 'sqlparser.y', 190)
  def _reduce_52(val, _values)
                                val[0] << val[2]
                          
  end
.,.,

# reduce 53 omitted

# reduce 54 omitted

# reduce 55 omitted

module_eval(<<'.,.,', 'sqlparser.y', 199)
  def _reduce_56(val, _values)
                                [val[0]]
                          
  end
.,.,

module_eval(<<'.,.,', 'sqlparser.y', 203)
  def _reduce_57(val, _values)
                                val[0] << val[2]
                          
  end
.,.,

module_eval(<<'.,.,', 'sqlparser.y', 206)
  def _reduce_58(val, _values)
     '$in'     
  end
.,.,

module_eval(<<'.,.,', 'sqlparser.y', 207)
  def _reduce_59(val, _values)
     '$regexp' 
  end
.,.,

module_eval(<<'.,.,', 'sqlparser.y', 208)
  def _reduce_60(val, _values)
     :'!='     
  end
.,.,

module_eval(<<'.,.,', 'sqlparser.y', 209)
  def _reduce_61(val, _values)
     :'!='     
  end
.,.,

module_eval(<<'.,.,', 'sqlparser.y', 210)
  def _reduce_62(val, _values)
     :'>='     
  end
.,.,

module_eval(<<'.,.,', 'sqlparser.y', 211)
  def _reduce_63(val, _values)
     :'<='     
  end
.,.,

module_eval(<<'.,.,', 'sqlparser.y', 212)
  def _reduce_64(val, _values)
     :'>'      
  end
.,.,

module_eval(<<'.,.,', 'sqlparser.y', 213)
  def _reduce_65(val, _values)
     :'<'      
  end
.,.,

module_eval(<<'.,.,', 'sqlparser.y', 214)
  def _reduce_66(val, _values)
     :'=='     
  end
.,.,

module_eval(<<'.,.,', 'sqlparser.y', 216)
  def _reduce_67(val, _values)
     :asc  
  end
.,.,

module_eval(<<'.,.,', 'sqlparser.y', 217)
  def _reduce_68(val, _values)
     :desc 
  end
.,.,

def _reduce_none(val, _values)
  val[0]
end

end   # class SQLParser


end # module ActiveCassandra
